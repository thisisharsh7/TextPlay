{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js","components/android-chrome-512x512.png"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","src","logo","style","width","height","alt","aria-current","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","onClick","toggleMode","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","length","showAlert","toLowerCase","charAt","slice","document","getElementById","select","navigator","clipboard","writeText","split","join","Alert","alert","role","word","lower","capitalize","msg","defaultProps","title","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App","module","exports","p"],"mappings":"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","file":"static/js/main.e64d70e5.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n// import {Link} from 'react-router-dom';\r\nimport logo from './android-chrome-512x512.png'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n      <ul className=\"navbar-nav mb-lg-0\">\r\n        <li className=\"nav-item d-flex\">\r\n        <img src={logo} className=\"rounded \" style={{ width: 40, height: 40}} alt=\"logo\" />\r\n        <a className=\"navbar-brand nav-link active disabled \" aria-current=\"page\" href=\"/\">TextPlay</a>\r\n        </li>\r\n     </ul>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active disabled\" aria-current=\"page\" href=\"/\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-a\" to=\"/about\">{props.aboutText}</a>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n          </form> */}\r\n          <ul className=\"navbar-nav me-auto mb-lg-0\">\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckChecked\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">Enable Dark Mode</label>\r\n          </div>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    // aboutText: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nNavbar.defaultProps = {\r\n    title : 'Set Title here',\r\n    // aboutText : 'About'\r\n}","import React, {useState} from 'react'\r\n\r\n\r\nexport default function Textform(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"UpperCase invoked\");\r\n        let newText=text.toUpperCase();\r\n        setText(newText); \r\n        if(newText.length>0){\r\n            props.showAlert('Converted to upper case!','success');\r\n        }else{\r\n            props.showAlert('Input Text first!','warning');\r\n        }\r\n    }\r\n    const handleLoClick = ()=>{\r\n        let newText=text.toLowerCase();\r\n        if(newText.length>0){\r\n            props.showAlert('Converted to lower case!','success');\r\n        }else{\r\n            props.showAlert('Input Text first!','warning');\r\n        }\r\n        setText(newText);\r\n        \r\n    }\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"handle on change\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleClearClick = ()=>{\r\n        if(text.length>0){\r\n            props.showAlert('Cleared Text!','success');\r\n        }else{\r\n            props.showAlert('Input Text first!','warning');\r\n        }\r\n        let newText='';\r\n        setText(newText);\r\n        \r\n    }\r\n    const handleCapitalClick = ()=>{\r\n        let newText=text.charAt(0).toUpperCase()+ text.slice(1).toLowerCase();\r\n        setText(newText);\r\n        if(newText.length>0){\r\n            props.showAlert('First letter changed to upper Case!','success');\r\n        }else{\r\n            props.showAlert('Input Text first!','warning');\r\n        }\r\n    }\r\n    const handleCopy = ()=>{\r\n\r\n        let newText=document.getElementById('myBox');\r\n        if(newText.value.length>0){\r\n            props.showAlert('Text copied to clipboard!','success'); \r\n        }else{\r\n            props.showAlert('Input Text first!','warning');\r\n        }\r\n        newText.select();\r\n        navigator.clipboard.writeText(newText.value);\r\n    }\r\n    const handleSpace = ()=>{\r\n        let newText= text.split(/[ ]+/);\r\n        if(text.length>0){\r\n            props.showAlert('Removed extra spaces!','success');\r\n        }else{\r\n            props.showAlert('Input Text first!','warning');\r\n        }\r\n        setText(newText.join(\" \")); \r\n        \r\n    }\r\n    const [ text, setText ] = useState('');\r\n    // text=\"harsh is here\";//wrong way to change the state\r\n    // setText(\"harsh is here\");//correct way to change the state\r\n  return (\r\n    <>\r\n    <div  className='container' style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'black':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary my-1\" onClick={handleUpClick}>Convert to uppercase</button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleLoClick}>Convert to lowercase</button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleCapitalClick}>Capitalized case</button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleCopy}>Copy Text</button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleSpace}>Remove Extra Spaces</button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleClearClick}>Clear</button>\r\n        \r\n        \r\n    </div>\r\n    <div className=\"container my-3\"  style={{color: props.mode==='dark'?'white':'#042743'}} >\r\n        <h2>Text Summary here</h2>\r\n        <p>{text.split(/\\s+/).length - 1} words and {text.length} characters.</p>\r\n        <p>{0.008 * (text.split(/\\s+/).length - 1)} Minutes take to read.</p>\r\n        <h3>Preview</h3>\r\n        <p>{text.length>0 ? text: 'Enter Text Above for preview.'}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize= (word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from 'react-router-dom';\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert,setAlert]= useState(null);\n  const showAlert= (message,type)=>{\n    setAlert({\n      msg:message,\n      type: type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },2000)\n  }\n  const toggleMode = ()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor= '#042743';\n      showAlert('Dark mode has been enabled.','success');\n    }else{\n      setMode('light');\n      document.body.style.backgroundColor= 'white';\n      showAlert('Light mode has been enabled.','success');\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextPlay\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert={alert}/>\n    <div className='container my-3'>  \n      {/* <Switch> */}\n            {/* <Route path=\"/about\">\n              <About/>\n            </Route> */}\n            {/* <Route exact path=\"/\"> */}\n            <TextForm heading='Enter The Text To Analyze Below' mode={mode} showAlert={showAlert} /> \n            {/* </Route> */}\n      {/* </Switch> */}\n    </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/android-chrome-512x512.1870fd48.png\";"],"sourceRoot":""}